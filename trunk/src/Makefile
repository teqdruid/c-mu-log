OBJS = parser.cmo scanner.cmo printer.cmo trans.cmo interp.cmo

all: culog print pwall

culog : $(OBJS) culog.cmo
	ocamlc -g -o culog $(OBJS) culog.cmo

pwall : $(OBJS) pwall.cmo
	ocamlc -g -o pwall $(OBJS) pwall.cmo

print : $(OBJS) print.cmo
	ocamlc -g -o $@ $(OBJS) print.cmo

scanner.ml : scanner.mll
	ocamllex scanner.mll

parser.ml parser.mli : parser.mly
	ocamlyacc parser.mly

%.cmo : %.ml
	ocamlc -c -g $<

%.cmi : %.mli
	ocamlc -c -g $<

srclc:
	sloccount printer.ml parser.mly scanner.mll interp.ml \
	print.ml trans.ml Makefile *.py

tstlc:
	wc -l tests/*.ul
	wc -l tests/*.out

.PHONY : clean
clean :
	rm -f culog parser.ml parser.mli scanner.ml testall.log *.cmo *.cmi print

# Generated by ocamldep *.ml *.mli

interp.cmo: trans.cmo scanner.cmo parser.cmi ast.cmi
interp.cmx: trans.cmx scanner.cmx parser.cmx ast.cmi
parser.cmo: ast.cmi parser.cmi
parser.cmx: ast.cmi parser.cmi
printer.cmo: ast.cmi
printer.cmx: ast.cmi
print.cmo: scanner.cmo printer.cmo parser.cmi
print.cmx: scanner.cmx printer.cmx parser.cmx
scanner.cmo: parser.cmi
scanner.cmx: parser.cmx
trans.cmo: ast.cmi
trans.cmx: ast.cmi
parser.cmi: ast.cmi
